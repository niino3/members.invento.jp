rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // ユーザードキュメント
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && isAdmin();
    }
    
    // 顧客ドキュメント
    match /customers/{customerId} {
      allow read, write: if request.auth != null && isAdmin();
      allow read: if request.auth != null && isOwner(customerId);
    }
    
    // サービスカテゴリードキュメント
    match /serviceCategories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // サービスドキュメント
    match /services/{serviceId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // 請求ドキュメント
    match /billing/{billingId} {
      allow read, write: if request.auth != null && isAdmin();
      allow read: if request.auth != null && isCustomerOwner(resource.data.customerId);
    }
    
    // 問い合わせドキュメント
    match /inquiries/{inquiryId} {
      allow read, write: if request.auth != null && isAdmin();
      allow create: if request.auth != null;
      allow read: if request.auth != null && isCustomerOwner(resource.data.customerId);
    }
    
    // サービスログドキュメント
    match /serviceLogs/{logId} {
      // 管理者は全てのログを操作可能
      allow read, write: if request.auth != null && isAdmin();
      // 顧客は自分の公開ログのみ閲覧可能
      allow read, list: if request.auth != null && 
                           isCustomerOwner(resource.data.customerId) && 
                           resource.data.status == 'published';
    }
    
    // 活動ログドキュメント
    match /activities/{activityId} {
      // 管理者のみ読み書き可能
      allow read, write: if request.auth != null && isAdmin();
      // 顧客はアクセス不可（管理者専用）
    }
    
    // 管理者かどうかを判定
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // 顧客の所有者かどうかを判定
    function isOwner(customerId) {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.customerId == customerId;
    }
    
    // 顧客IDから所有者かどうかを判定（isOwnerのエイリアス）
    function isCustomerOwner(customerId) {
      return isOwner(customerId);
    }
  }
}